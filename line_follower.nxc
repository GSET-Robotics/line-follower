  #define MOTOR_SPEED 10.0;
  #define SLOW_VAR 30.0;
  #define FAST_VAR 50.0;

  task main() {
    // define variables
    float A_speed = MOTOR_SPEED;
    float C_speed = MOTOR_SPEED;
    int var;
    unsigned int black, white, x, c;
    float range, value;
    float y;

    // set up sensors
    SetSensorLight(S3);
    SetSensorType(S1, SENSOR_TYPE_LOWSPEED);
    

    // calibrate white and black colors
    black = SensorRaw(S3);
    RotateMotor(OUT_C, 75, 360);
    Wait(1000);
    white = SensorRaw(S3);
    RotateMotor(OUT_C, -75, 360);

    // TextOut(0, LCD_LINE1, NumToStr(black));
    // TextOut(0, LCD_LINE2, NumToStr(white));

    Wait(1000);

    while (c != 7 || c != 8 || c != 9) {
      // get x between 0 and 1 in white to black range
      x = SensorRaw(S3);
      c = SensorHTColorNum(S1);

      value = x - white;
      range = black - white;
      y = (2 * value / range) - 1;
      TextOut(0, 0 , NumToStr(y));

      if (y >= 0){

        A_speed =(1.1 - y) * FAST_VAR - 20.0;
        C_speed =(1.1 - y) * SLOW_VAR + 20.0;
      }
      else {
        A_speed = (1.1 - abs(y)) * SLOW_VAR + 20.0;
        C_speed = (1.1 - abs(y)) * FAST_VAR - 20.0;
      }

      ClearLine(LCD_LINE4);
      ClearLine(LCD_LINE5);
      NumOut(0, LCD_LINE4, A_speed);
      NumOut(0, LCD_LINE5, C_speed);
      OnFwd(OUT_A, A_speed);
      OnFwd(OUT_C, C_speed);

      ClearLine(LCD_LINE3);
      NumOut(10,LCD_LINE3,c);
      if(c == 2 || c == 3) {
       //do something. output sound to signal a dead man
       PlayToneEx(300, 400, 2, false);
      }
    }

    // turn right 90 degrees
    
    // forward until US
    
    // left 90 degrees
    
    // forward until US, record distance
    
    // backward same distance
    
    // turn left 90 degrees

    // forward 3 inches, right 90 degrees sense wall (exit if wall), left 90 degrees, repeat
    
    // (forward until US, right 90 degrees) x 3
    
    // forward until US, left 90 degrees
    
    // (forward until US, right 90 degrees) x 2
    


}
